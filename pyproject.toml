[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "petrosa-socket-client"
version = "1.0.0"
description = "Binance WebSocket client for real-time data streaming"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Petrosa Systems", email = "info@petrosa.com"}
]
maintainers = [
    {name = "Petrosa Systems", email = "info@petrosa.com"}
]
keywords = ["websocket", "binance", "crypto", "trading", "nats", "real-time"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
]
requires-python = ">=3.11"
dependencies = [
    "websockets>=12.0",
    "nats-py>=2.0.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "structlog>=23.0.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-distro>=0.41b0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.20.0",
    "opentelemetry-exporter-otlp-proto-http>=1.20.0",
    "opentelemetry-instrumentation>=0.41b0",
    "opentelemetry-instrumentation-logging>=0.41b0",
    "opentelemetry-instrumentation-requests>=0.41b0",
    "opentelemetry-instrumentation-urllib3>=0.41b0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-semantic-conventions>=0.41b0",
    "typer>=0.9.0",
    "orjson>=3.9.0",
    "asyncio-mqtt>=0.16.0",
    "pybreaker>=1.0.0",
    "python-dateutil>=2.8.2",
    "cryptography>=41.0.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "bandit==1.7.5",
    "black==23.12.1",
    "codecov==2.1.13",
    "coverage==7.4.1",
    "flake8==7.0.0",
    "ipdb==0.13.13",
    "ipython==8.18.1",
    "isort==5.13.2",
    "jupyter==1.0.0",
    "locust==2.17.0",
    "mypy==1.8.0",
    "notebook==7.0.6",
    "pre-commit==3.6.0",
    "pytest==7.4.4",
    "pytest-asyncio==0.23.5",
    "pytest-cov==4.1.0",
    "pytest-html==4.1.1",
    "pytest-mock==3.12.0",
    "pytest-timeout==2.1.0",
    "pytest-xdist==3.5.0",
    "ruff==0.1.15",
    "sphinx==7.2.6",
    "sphinx-rtd-theme==1.3.0",
    "types-python-dateutil==2.8.19.20240106",
    "types-PyYAML==6.0.12.12",
    "types-requests==2.31.0.20240125",
    "websockets[test]>=12.0",
    "asynctest>=0.13.0",
]

test = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "websockets[test]>=12.0",
    "asynctest>=0.13.0",
]

docs = [
    "sphinx>=7.2.6",
    "sphinx-rtd-theme>=1.3.0",
]

[project.scripts]
socket-client = "socket_client.main:app"

[project.urls]
Homepage = "https://github.com/petrosa/petrosa-socket-client"
Documentation = "https://github.com/petrosa/petrosa-socket-client/wiki"
Repository = "https://github.com/petrosa/petrosa-socket-client.git"
"Bug Tracker" = "https://github.com/petrosa/petrosa-socket-client/issues"
"Discussions" = "https://github.com/petrosa/petrosa-socket-client/discussions"

[tool.setuptools.packages.find]
where = ["."]
include = ["socket_client*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
socket_client = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
exclude = [
    "scripts/run_pipeline.py",
    "scripts/test_pipeline_simulation.py",
    "scripts/test_production_simulation.py",
    "scripts/test_integration.py",
    "scripts/test_otel_setup.py",
    "scripts/test_nats_messaging.py",
    "scripts/telemetry_test_script.py",
    "scripts/fix_.*\\.py",
    "scripts/add_.*\\.py",
    "scripts/auto_context.py",
    "tests/.*",
]

[[tool.mypy.overrides]]
module = [
    "websockets.*",
    "nats.*",
    "aiohttp.*",
    "orjson.*",
    "pybreaker.*",
    "petrosa_otel.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["socket_client"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.sphinx.ext.autodoc]
